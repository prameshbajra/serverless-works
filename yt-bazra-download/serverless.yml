service: yt-bazra-download
frameworkVersion: "2"

provider:
  name: aws
  runtime: python3.8
  region: ap-south-1
  versionFunctions: false
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:GetObject"
      Resource:
        - "arn:aws:s3:::yt-bazra-download-content/*"

package:
  individually: true
  exclude:
      - node_modules/**
      - frontend/node_modules/**
      - venv/**

plugins:
  - serverless-finch
  - serverless-python-requirements

custom:
  client:
    bucketName: yt-bazra-download
    distributionFolder: frontend/dist/frontend/
    errorDocument: index.html

  pythonRequirements:
    dockerizePip: non-linux

functions:
  downloadThisUrl:
    handler: backend/apis/downloadThisUrl.downloadThisUrl
    timeout: 30 # Cannot be more than 30s as API gateway restricts it ...
    events:
      - http:
          path: /downloadThisUrl
          method: POST
          cors: true

  downloadAudioForThisUrl:
    handler: backend/apis/downloadAudioForThisUrl.downloadAudioForThisUrl
    timeout: 30 # Cannot be more than 30s as API gateway restricts it ...
    events:
      - http:
          path: /downloadAudioForThisUrl
          method: POST
          cors: true
        
  getVideoEntities:
    handler: backend/apis/getVideoEntities.getVideoEntities
    timeout: 30 
    events:
      - http:
          path: /getVideoEntities
          method: POST
          cors: true

resources:
  Resources:
    YTBazraDownloadContent:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: yt-bazra-download-content

    BucketPolicyForYTBazraDownloadContent:
      Type: "AWS::S3::BucketPolicy"
      Properties:
        PolicyDocument:
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: "*"
              Action:
                - "s3:GetObject"
                - "s3:PutObject"
              Resource: arn:aws:s3:::yt-bazra-download-content/*
        Bucket:
          Ref: YTBazraDownloadContent
